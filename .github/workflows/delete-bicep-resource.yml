name: azure bicep resource deletion

on:
  workflow_dispatch

jobs:
  delete:
    name: 'delete bicep resource'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2.1.0
        with:
          creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}

      - name: Check if directory exists
        run: ls ${{ github.workspace }}/src/bicep

      - name: Validate Bicep Script using What-If
        working-directory: ${{github.workspace}}/src/bicep
        run: az deployment group what-if --resource-group Abhijitchaudhari7898 --template-file ./main.bicep --parameters @mainA.parameters.json --parameters adminUsername=${{ secrets.ADMINUSERNAME }} --parameters adminPassword=${{ secrets.ADMINPASSWORD }}

      - name: List and Delete All Resources in Resource Group
        run: |
          # Define resource types to delete in order
          resource_types_to_delete_first=(
            "Microsoft.Compute/virtualMachines"
            "Microsoft.Network/networkInterfaces"
            "Microsoft.Network/publicIPAddresses"
            "Microsoft.Compute/disks"
            "Microsoft.Network/virtualNetworks"
          )

          # Function to delete resources of a specific type
          delete_resources_of_type() {
            resource_type=$1
            echo "Deleting resources of type: $resource_type"
            resources=$(az resource list --resource-group Abhijitchaudhari7898 --resource-type $resource_type --query "[].id" -o tsv)
            for resource in $resources; do
              echo "Deleting resource: $resource"
              if ! az resource delete --ids $resource --verbose; then
                echo "Failed to delete resource: $resource"
              fi
            done
          }

          # Delete resources in the specified order
          for resource_type in "${resource_types_to_delete_first[@]}"; do
            delete_resources_of_type $resource_type
          done

          # Attempt to delete remaining resources
          remaining_resources=$(az resource list --resource-group Abhijitchaudhari7898 --query "[].id" -o tsv)
          for resource in $remaining_resources; do
            echo "Deleting remaining resource: $resource"
            if ! az resource delete --ids $resource --verbose; then
              echo "Failed to delete remaining resource: $resource"
            fi
          done